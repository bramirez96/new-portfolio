// ! Copyright (c) 2024, Brandon Ramirez, brr.dev

@import './variables';

@mixin raised($level: 0, $shadow-color: $bui-shadow-color, $offset: 0.05rem) {
    @if $level == false {
        box-shadow: none;
    } @else {
        box-shadow: 0
            (($level + 1) * $offset)
            (($level + 2) * $offset)
            transparentize($shadow-color, 0.1 + $level * 0.125rem);
    }
}

@keyframes ripple {
    to {
        transform: scale(var(--ui-ripple-scale, 4));
        opacity: 0;
    }
}

@mixin ripple-container(
    $ripple-color: transparentize($white, 0.85),
    $duration: 1.25s,
    $ripple-z-index: -1
) {
    @if $ripple-color == false {
        & > span.ui-ripple-circle {
            display: none;
        }
    } @else {
        position: relative;
        overflow: hidden;

        & > span.ui-ripple-circle {
            pointer-events: none;
            z-index: $ripple-z-index;
            position: absolute;
            border-radius: 50%;
            transform: scale(0);
            animation: ripple var(--ui-ripple-duration, $duration) linear;
            background-color: var(--ui-ripple-color, $ripple-color);
        }
    }
}

/* !IMPORTANT: Don't forget to include "transform" in transition properties */
@mixin pressable(
    $growth-scale-factor: 0.005,
    $shrink-scale-factor: $growth-scale-factor
) {
    &:hover {
        transform: scale(1 + $growth-scale-factor);
    }

    &:active {
        transform: scale(1 - $shrink-scale-factor);
    }
}

@mixin page-template() {
    // Block styling for template, should fill the whole page
    display: block;
    min-height: 100vh;
    max-width: 100%;
    width: 100%;
    padding-bottom: 2rem;
}

@mixin content-safe($width: 1000px, $min-padding: 1rem) {
    $content-safe-padding: calc((100vw - $width) / 2);

    padding-left: max($content-safe-padding, $min-padding);
    padding-right: max($content-safe-padding, $min-padding);
}

@mixin media-med() {
    @media screen and (width >= $bui-medium-query) {
        @content;
    }
}

@mixin media-large() {
    @media screen and (width >= $bui-large-query) {
        @content;
    }
}

@mixin media-x-large() {
    @media screen and (width >= $bui-x-large-query) {
        @content;
    }
}

@mixin media-2x-large() {
    @media screen and (width >= $bui-2-x-large-query) {
        @content;
    }
}
